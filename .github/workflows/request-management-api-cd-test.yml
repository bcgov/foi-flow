name: Request Management API CD


on:
  push:
    branches:
      - main
    paths:
      - "request-management-api/**"
  # Remove this "push" section when done developing.
  push:
    branches: 
      - dev-AC-212
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment (dev/test/prod)"
        required: true
        default: "test"

defaults:
  run:
    shell: bash
    working-directory: ./request-management-api

env:
  APP_NAME: "request-management-api"
  TAG_NAME: "test"

jobs:
  request-management-api-cd-by-push:
    runs-on: ubuntu-20.04

    if: github.event_name == 'push' && github.repository == 'bcgov/foi-flow'
    environment:
      name: "test"

    steps:
      - uses: actions/checkout@v2

      - name: Login Openshift
        shell: bash
        run: |
          oc login --server=${{secrets.OPENSHIFT4_LOGIN_REGISTRY}} --token=${{secrets.OPENSHIFT4_SA_TOKEN}}

      - name: Start Build Openshift
        shell: bash
        run: |
          oc start-build request-management-api-build --wait

      - name: Tag+Deploy for DEV
        shell: bash
        run: |
          oc tag request-management-api:latest request-management-api:dev

      - name: Tag+Deploy for TEST
        shell: bash
        run: |
          oc tag request-management-api:dev request-management-api:${{ env.TAG_NAME }}

      # - name: Watch new rollout (trigger by image change in Openshift)
      #   shell: bash
      #   run: |
      #     oc rollout status dc/${{ env.APP_NAME }} -n ${{ secrets.OPENSHIFT4_FRONTEND_REPOSITORY }}-${{ env.TAG_NAME }} -w

      # - name: Rocket.Chat Notification
      #   uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
      #   if: failure()
      #   with:
      #     type: ${{ job.status }}
      #     job_name: "*Auth Web Built and Deployed to ${{env.TAG_NAME}}*"
      #     channel: "#registries-bot"
      #     url: ${{ secrets.ROCKETCHAT_WEBHOOK }}
      #     commit: true
      #     token: ${{ secrets.GITHUB_TOKEN }}
