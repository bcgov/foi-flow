name: Template API CD


on:
  push:
    branches:
      - dev
      - main
      - dev-marshal
      - test-marshal
      - dev-rook
      - test-rook
    paths:
      - "integrationapi/MCS.FOI.Integration/**"

defaults:
  run:
    shell: bash
    working-directory: ./integrationapi/MCS.FOI.Integration

env:
  APP_NAME: "template-api"
  TOOLS_NAME: "${{secrets.OPENSHIFT4_FRONTEND_REPOSITORY}}"

jobs:
  openinfoservice-cd-by-push:
    runs-on: ubuntu-24.04

    if: github.event_name == 'push' && github.repository == 'bcgov/foi-flow'
    steps:
      - uses: actions/checkout@v2

      - name: Install OpenShift CLI
        uses: redhat-actions/oc-installer@v1
        with:
          oc_version: '4.6'

      - name: Verify oc installation
        run: oc version

      - name: Set ENV variables for dev branch
        if: ${{ github.ref_name == 'dev' }}
        shell: bash
        run: |
          echo "For ${{ github.ref_name }} branch"
          echo "TAG_NAME=dev" >> $GITHUB_ENV
          echo "BRANCH_NAME=dev" >> $GITHUB_ENV
          echo "ENV_NAME=dev" >> $GITHUB_ENV
      - name: Set ENV variables for main branch
        if: ${{ github.ref_name == 'main' }}
        shell: bash
        run: |
          echo "For ${{ github.ref_name }} branch"
          echo "TAG_NAME=test" >> $GITHUB_ENV
          echo "BRANCH_NAME=main" >> $GITHUB_ENV
          echo "ENV_NAME=test" >> $GITHUB_ENV
      - name: Set ENV variables for dev-marshal branch
        if: ${{ github.ref_name == 'dev-marshal' }}
        run: |
          echo "For ${{ github.ref_name }} branch"
          echo "TAG_NAME=dev-marshal" >> $GITHUB_ENV
          echo "BRANCH_NAME=dev-marshal" >> $GITHUB_ENV
          echo "ENV_NAME=dev" >> $GITHUB_ENV
      - name: Set ENV variables for test-marshal branch
        if: ${{ github.ref_name == 'test-marshal' }}
        run: |
          echo "For ${{ github.ref_name }} branch"
          echo "TAG_NAME=test-marshal" >> $GITHUB_ENV
          echo "BRANCH_NAME=test-marshal" >> $GITHUB_ENV
          echo "ENV_NAME=test" >> $GITHUB_ENV
      
      - name: Set ENV variables for dev-rook branch
        if: ${{ github.ref_name == 'dev-rook' }}
        run: |
          echo "For ${{ github.ref_name }} branch"
          echo "TAG_NAME=dev-rook" >> $GITHUB_ENV
          echo "BRANCH_NAME=dev-rook" >> $GITHUB_ENV
          echo "ENV_NAME=dev" >> $GITHUB_ENV
          echo "ENV_TAG_NAME=rook" >> $GITHUB_ENV
      - name: Set ENV variables for test-rook branch
        if: ${{ github.ref_name == 'test-rook' }}
        run: |
          echo "For ${{ github.ref_name }} branch"
          echo "TAG_NAME=test-rook" >> $GITHUB_ENV
          echo "BRANCH_NAME=test-rook" >> $GITHUB_ENV
          echo "ENV_NAME=test" >> $GITHUB_ENV
          echo "ENV_TAG_NAME=rook" >> $GITHUB_ENV
      - name: Login Openshift
        shell: bash
        run: |
          oc login --server=${{secrets.OPENSHIFT4_LOGIN_REGISTRY}} --token=${{secrets.OPENSHIFT4_SA_TOKEN}}
      - name: Tools project
        shell: bash
        run: |
          oc project ${{ env.TOOLS_NAME }}-tools
      - name: Build from ${{ env.BRANCH_NAME }} branch
        shell: bash
        run: |
          oc patch bc/${{ env.APP_NAME }}-build -p '{"spec":{"source":{"git":{"ref":"${{ env.BRANCH_NAME }}"}}}}'
      - name: Start Build Openshift
        shell: bash
        run: |
          oc start-build ${{ env.APP_NAME }}-build --wait
      - name: Tag+Deploy for ${{ env.TAG_NAME }}
        shell: bash
        run: |
          oc tag ${{ env.APP_NAME }}:latest ${{ env.APP_NAME }}:${{ env.TAG_NAME }}
      # - name: Watch new rollout (trigger by image change in Openshift)
      #   shell: bash
      #   run: |
      #     oc rollout status dc/${{ env.APP_NAME }}-{{ env.ENV_TAG_NAME }} -n ${{ env.TOOLS_NAME }}-${{ env.ENV_NAME }} -w