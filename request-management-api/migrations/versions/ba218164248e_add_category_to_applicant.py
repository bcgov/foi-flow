"""add category to applicant

Revision ID: ba218164248e
Revises: 59a97f42b5f2
Create Date: 2024-01-15 13:09:57.278888

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ba218164248e'
down_revision = '59a97f42b5f2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('FOIRequestApplicants', sa.Column('applicantcategoryid', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'FOIRequestApplicants', 'ApplicantCategories', ['applicantcategoryid'], ['applicantcategoryid'])

    op.execute(
        '''
        UPDATE public."FOIRequestApplicants"
        set applicantcategoryid = subquery.applicantcategoryid
        from (
            select public."FOIRequestApplicantMappings".foirequestapplicantid, public."FOIRequests".applicantcategoryid
            from (
                select max(public."FOIRequestApplicantMappings".foirequestapplicantmappingid) as foirequestapplicantmappingid
                from public."FOIRequestApplicantMappings"
				where public."FOIRequestApplicantMappings".requestortypeid = 1
                group by public."FOIRequestApplicantMappings".foirequestapplicantid
            ) as maxmappingid
            join public."FOIRequestApplicantMappings" on public."FOIRequestApplicantMappings".foirequestapplicantmappingid = maxmappingid.foirequestapplicantmappingid
            join public."FOIRequests" on public."FOIRequests".foirequestid = public."FOIRequestApplicantMappings".foirequest_id and public."FOIRequests".version = public."FOIRequestApplicantMappings".foirequestversion_id
        ) as subquery
        where public."FOIRequestApplicants".foirequestapplicantid = subquery.foirequestapplicantid
			and public."FOIRequestApplicants".foirequestapplicantid not in (
				select foirequestapplicantid from (
					select foirequestapplicantid, count(applicantcategoryid) c from (
						select
							public."FOIRequestApplicantMappings".foirequestapplicantid,
							public."FOIRequests".applicantcategoryid
						from public."FOIRequestApplicantMappings"
						join public."FOIRequests" on
							public."FOIRequests".foirequestid = public."FOIRequestApplicantMappings".foirequest_id
							and public."FOIRequests".version = public."FOIRequestApplicantMappings".foirequestversion_id
						where public."FOIRequestApplicantMappings".requestortypeid = 1
						group by public."FOIRequestApplicantMappings".foirequestapplicantid, public."FOIRequests".applicantcategoryid
					) as subquery2
					group by foirequestapplicantid
				-- 	order by count(applicantcategoryid) desc, foirequestapplicantid
				) as subquery1 where c > 1
			)
        '''
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'FOIRequestApplicants', type_='foreignkey')
    op.drop_column('FOIRequestApplicants', 'applicantcategoryid')
    # ### end Alembic commands ###